{"version":3,"sources":["Book.js","BookList.js","BooksAPI.js","BookSearch.js","BookShelves.js","App.js","index.js"],"names":["Book","props","_props$bookDetails","bookDetails","imageLinks","title","authors","shelf","react_default","a","createElement","className","style","width","height","backgroundImage","smallThumbnail","value","onChange","e","onChangeShelf","target","disabled","key","BookList","bookShelves","length","map","b","src_Book","id","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","BookSearch","state","keyword","results","keywordInput","query","_this2","this","books","data","setState","trim","search","_this3","react_router_dom","to","type","placeholder","setKeyword","src_BookList","bookUpdate","Component","BookShelves","_this","booksByShelf","status","forEach","list","values","filter","sh","toLocaleUpperCase","BooksApp","BooksAPI","getBooksFromApi","console","log","react_router","exact","path","element","src_BookSearch","src_BookShelves","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.074e79ed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//passing Book in a loop so we can use other side \r\nconst Book = (props) => {\r\n  const {imageLinks, title, authors, shelf} = props.bookDetails;\r\n   \r\n  return (\r\n      <li>\r\n          <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                  <div className=\"book-cover\" style={{ \r\n                      width: 128, \r\n                      height: 193, \r\n                      backgroundImage: \"url(\" + imageLinks.smallThumbnail + \")\"\r\n                  }}>\r\n                  </div>\r\n                  <div className=\"book-shelf-changer\">\r\n                      <select value={shelf} onChange={(e) => {props.onChangeShelf(e, props.bookDetails, e.target.value)}}>\r\n                          <option value=\"disabled\" disabled>Move to...</option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                      </select>\r\n                  </div>\r\n              </div>\r\n              <div className=\"book-title\">{title}</div> \r\n             <div className=\"book-authors\" key={authors}>{authors}</div>\r\n          </div>\r\n      </li>\r\n  )\r\n}\r\n\r\n\r\n  export default Book;","import React, { Component }  from 'react';\r\nimport Book from './Book'\r\n\r\n\r\nconst BookList = (props)=>\r\n{\r\n    const bookShelves = props.bookShelves;\r\n    return(\r\n        <div>\r\n            {bookShelves && bookShelves.length > 0 ?\r\n                <ol className=\"books-grid\">{\r\n                    bookShelves.map(b =>{\r\n                        return <Book key={b.id}  bookDetails={b} onChangeShelf={props.onChangeShelf}/>\r\n                    })\r\n                }\r\n                </ol>\r\n            : <div>There are no books finded'</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default BookList","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component }  from 'react';\r\nimport * as _ from 'lodash';\r\nimport BookList from './BookList'\r\nimport * as BooksAPI from './BooksAPI';\r\nimport { Link } from 'react-router-dom';\r\nclass BookSearch extends Component {\r\n    state = {\r\n      keyword :'',\r\n      results:[]\r\n    }\r\n\r\n    // bookMap(books,allBooks){\r\n    //   console.log(Object.values(books))\r\n    //   console.log(Object.values(allBooks))\r\n    //   Object.values(books).map((b)=>{\r\n    //     let match = _.find(allBooks, {id: b.id});\r\n    //                 if (match && !_.isEmpty(match)) {\r\n    //                     b.shelf = match.shelf;\r\n    //                 } else {\r\n    //                     b.shelf = 'none';\r\n    //                 }\r\n    //                 return b;\r\n    //   })\r\n    // }\r\n    search(keywordInput){\r\n      const allBooks = this.props.books;\r\n      BooksAPI.search(keywordInput).then((books)=>{\r\n        //const mappedBooks = this.bookMap(books,allBooks);\r\n        this.setState({results: books})\r\n      })\r\n    }\r\n//handling input text\r\n    setKeyword(keywordInput)\r\n    {\r\n        this.setState({keyword:keywordInput})\r\n        if (keywordInput.trim()) {\r\n          this.search(keywordInput);\r\n      } else {\r\n          this.setState({keyword: '', results: []});\r\n      }\r\n    }\r\n\r\nrender(){\r\n    return(\r\n                <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search Books\" value={this.state.keyword}///when value change List Book Change\r\n                  onChange={e => this.setKeyword(e.target.value)}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                <BookList bookShelves={this.state.results} onChangeShelf={this.props.bookUpdate}/>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n  export default BookSearch","import React, {Component} from 'react';\r\nimport BookList from './BookList.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BookShelves extends Component {\r\n    render() {\r\n        const books = this.props.books;\r\n        const booksByShelf = {};\r\n        const status = ['currentlyReading', 'wantToRead', 'read'];\r\n\r\n        status.forEach((shelf) => {\r\n            let list = Object.values(books).filter((book) => (book.shelf === shelf));\r\n            booksByShelf[shelf] = list;\r\n        })\r\n\r\n        return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                    {status.map(sh=>{\r\n                        return(\r\n                            <div className=\"bookshelf\" key={sh}>\r\n                            <h2 className=\"bookshelf-title\">{sh.toLocaleUpperCase()}</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <BookList bookShelves={booksByShelf[sh]} onChangeShelf={this.props.bookUpdate}/>                      \r\n                            </div>\r\n                        </div>\r\n                        )\r\n                        \r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to='search'>Add a book</Link>\r\n            </div>\r\n          </div>\r\n    )}\r\n}\r\n\r\nexport default BookShelves","import React, { Component } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport BookSearch from './BookSearch';\nimport BookShelves from './BookShelves';\nimport * as BooksAPI from './BooksAPI';\n\n\nclass BooksApp extends Component {\n  //books state app.js\n  state = {\n    books:[]\n  }\n//getting book from service\n getBooksFromApi()\n {\n  BooksAPI.getAll()\n  .then(data => { \n  this.setState(() => (\n      {books: data}\n  ))\n})\n }\n componentDidMount(){\n   this.getBooksFromApi();\n }\n\n bookUpdate = (e,book,value)=>\n {\n   BooksAPI.update(book,value).then(()=>{\n    book.shelf =value;\n    this.getBooksFromApi();\n   })\n }\n\n \n  render() {\n    {console.log(Object.values(this.state.books))}\n    return (\n      <div className=\"app\">\n        \n        <Routes>\n                <Route exact path=\"/search\" element={\n                    <BookSearch \n                        books={this.state.books} \n                        bookUpdate={this.bookUpdate}/>\n                }/>\n                <Route path=\"/\" exact element={\n                    <BookShelves \n                        books={this.state.books} \n                        bookUpdate={this.bookUpdate}/>\n\n                }/>\n        </Routes>\n                \n       </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}